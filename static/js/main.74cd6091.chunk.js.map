{"version":3,"sources":["components/Header.js","components/DamageInputForm.js","components/CharacterSingle.js","components/CharacterList.js","helpers.js","components/AddCharacterForm.js","components/Characters.js","components/NPCs.js","components/SaveButton.js","components/Save.js","sample-encounter.js","components/App.js","components/Home.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","href","React","Component","DamageInputForm","damageRef","createRef","recordDamage","event","preventDefault","damage","parseInt","current","value","props","updateHp","hp","currentTarget","reset","className","onSubmit","this","id","name","type","ref","placeholder","required","disabled","battleStarted","CharacterSingle","state","details","message","status","getMessage","nothing","index","died","healed","Math","abs","revived","damaged","dead","maxHp","oldHp","newHp","updatedStats","setState","updateStatus","character","isPC","init","characterStatus","CharacterList","getCharacters","characterList","Object","keys","map","key","listType","characters","calculateModifier","score","generateGuid","s4","floor","random","toString","substring","AddCharacterForm","nameRef","dexRef","hpRef","initRef","createCharacter","modifiedInit","characterIndex","npcIndex","dex","updateCharacters","updateCharacterCount","updateNPCs","updateNpcCount","min","max","onClick","Characters","NPCs","npcs","SaveButton","getButtonText","battleCanStart","resetEncounter","updateBattleStarted","Save","maybeHideButton","loadSampleEncounter","sampleState","characterCount","npcCount","App","updatedCharacter","sort","a","b","updatedNPC","count","maybeUpdateBattleCanStart","params","match","localStorageRef","localStorage","getItem","encounterGuid","JSON","parse","setItem","stringify","Home","encounterInput","goToEncounter","history","push","defaultValue","NotFound","Router","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.74cd6091.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<header>\n\t\t\t\t<a href=\"/\">\n\t\t\t\t\t<h1>⚔️ Dungeons & Dragons Battle Tracker</h1>\n\t\t\t\t</a>\n\t\t\t</header>\n\t\t)\n\t}\n}\n\nexport default Header;","import React from 'react';\n\nclass DamageInputForm extends React.Component {\n\tdamageRef = React.createRef();\n\n\trecordDamage = event => {\n\t\tevent.preventDefault();\n\n\t\tconst damage = parseInt( this.damageRef.current.value );\n\n\t\tthis.props.updateHp( damage, this.props.hp );\n\n\t\tevent.currentTarget.reset();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"record-damage\" onSubmit={ this.recordDamage }>\n\t\t\t\t<input\n\t\t\t\t\tid={ `character-${this.props.id}-damage` }\n\t\t\t\t\tname=\"damage\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tref={ this.damageRef }\n\t\t\t\t\tplaceholder=\"Damage\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tid={`character-${this.props.id}-damage-btn`}\n\t\t\t\t\tdisabled={ ! this.props.battleStarted }\n\t\t\t\t>Record Damage</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default DamageInputForm;","import React from 'react';\nimport DamageInputForm from './DamageInputForm';\n\nclass CharacterSingle extends React.Component {\n\tstate = {\n\t\thp: this.props.details.hp,\n\t\tdamage: 0,\n\t\tmessage: '',\n\t\tstatus: '' // nothing, died, healed, revived, damaged\n\t}\n\n\tgetMessage = ( name, status, damage ) => {\n\t\tconst messages = {\n\t\t\tnothing: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">🤷‍♂️</span> <span className={ status }>Nothing happened.</span>\n\t\t\t</span>,\n\t\t\tdied: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">😱</span> <span className={ status }>{ name } died!</span>\n\t\t\t</span>,\n\t\t\thealed: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">❇️ </span> <span className={ status }>{ name } was healed for { Math.abs( damage ) } points!</span>\n\t\t\t</span>,\n\t\t\trevived: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">✨</span> <span className={ status }>{ name } was revived!</span>\n\t\t\t</span>,\n\t\t\tdamaged: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">💥</span> <span className={ status }>{ name } took { Math.abs( damage ) } damage!</span>\n\t\t\t</span>,\n\t\t\tdead: <span\n\t\t\t\tclassName=\"hp-update-msg\"\n\t\t\t\tid={`hpUpdateMsg-${this.props.details.index}`}\n\t\t\t>\n\t\t\t\t<span className=\"emoji\">💀</span> <span className={ status }>{ name } is dead.</span>\n\t\t\t</span>\n\t\t}\n\n\t\treturn messages[ status ];\n\t};\n\n\tupdateHp = ( damage, maxHp ) => {\n\t\tconst oldHp = this.state.hp ?? 0;\n\t\tlet newHp = oldHp - parseInt( damage );\n\n\t\t// HP can't drop below zero.\n\t\tif ( newHp < 0 ) {\n\t\t\tnewHp = 0;\n\t\t}\n\n\t\t// HP can't exceed max.\n\t\tif ( newHp > maxHp ) {\n\t\t\tnewHp = maxHp;\n\t\t}\n\n\t\tconst updatedStats = {\n\t\t\tnewHp,\n\t\t\toldHp,\n\t\t\tdamage\n\t\t};\n\n\t\tthis.setState( { hp: newHp } );\n\t\tthis.setState( { damage } );\n\t\tthis.updateStatus( updatedStats );\n\t}\n\n\tupdateStatus = ( { newHp, oldHp, damage } ) => {\n\t\tlet status = '';\n\n\t\t// If the current HP is the same as the last HP, nothing happened. 🤷‍♂️\n\t\tif ( damage === 0 ) {\n\t\t\tstatus = 'nothing';\n\t\t}\n\n\n\t\t// If the HP is less than it was last turn, mark them as damaged. Update HP handles if HP drops below 0.\n\t\tif ( newHp < oldHp ) {\n\t\t\tstatus = 'damaged';\n\n\t\t\t// If the HP drops to 0, the character has died.\n\t\t\tif ( newHp === 0 ) {\n\t\t\t\tstatus = 'died';\n\t\t\t}\n\t\t}\n\n\t\t// Add a dead status if damage was recorded but the character has died. This could be useful for displaying information about saving throws.\n\t\tif ( newHp === 0 && oldHp === 0 ) {\n\t\t\tstatus = 'dead'\n\t\t}\n\n\t\t// If the HP is greater than it was last turn, mark them as healed or revived if they've been brought back from the dead.\n\t\tif ( newHp > oldHp ) {\n\t\t\tstatus = 'healed';\n\n\t\t\t// If the character's HP was 0 last turn, they've been brought back from the dead.\n\t\t\tif ( oldHp === 0 ) {\n\t\t\t\tstatus = 'revived';\n\t\t\t}\n\t\t}\n\n\t\t// Update the status.\n\t\tthis.setState( { status } );\n\n\t\t// Update the message.\n\t\tthis.setState( { message: this.getMessage( this.props.details.name, status, damage ) } );\n\t}\n\n\trender() {\n\t\tconst character = this.props.details;\n\t\tconst isPC = this.props.type === 'character' ? 'PC' : 'NPC';\n\t\treturn (\n\t\t\t<li id={`character-${character.index}`}>\n\t\t\t\t\t<span className=\"character-details\" id={`character-${character.index}-details`}>{ character.name } ({ character.init }) ({ isPC })</span>\n\t\t\t\t\t<span className=\"character-hp\" id={`character-${character.index}-hp`}>\n\t\t\t\t\t\t<span className=\"hp-label\">HP: </span>\n\t\t\t\t\t\t{ this.state.hp }\n\t\t\t\t\t</span>\n\t\t\t\t<DamageInputForm\n\t\t\t\t\tid={ character.index }\n\t\t\t\t\thp={ character.hp }\n\t\t\t\t\tupdateHp={ this.updateHp }\n\t\t\t\t\tcharacterStatus={ this.state.status }\n\t\t\t\t\tupdateStatus={ this.updateStatus }\n\t\t\t\t\tbattleStarted={ this.props.battleStarted }\n\t\t\t\t/>\n\t\t\t\t{ this.state.message }\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nexport default CharacterSingle;","import React from 'react';\nimport CharacterSingle from './CharacterSingle';\n\nclass CharacterList extends React.Component {\n\n\tgetCharacters = ( characterList ) => {\n\t\tif ( characterList ) {\n\t\t\treturn (\n\t\t\t\tObject.keys( characterList )\n\t\t\t\t\t.map( key => <CharacterSingle\n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\tdetails={ characterList[key] }\n\t\t\t\t\t\ttype={ this.props.type }\n\t\t\t\t\t\tbattleStarted={ this.props.battleStarted }\n\t\t\t\t\t/> )\n\t\t\t)\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trender() {\n\t\tconst listType = this.props.type;\n\t\treturn (\n\t\t\t<ul id={`${listType}-list`}>\n\t\t\t\t{ this.getCharacters( this.props.characters ) }\n\t\t\t</ul>\n\t\t)\n\t}\n}\n\nexport default CharacterList;","/**\n * Helper functions for the app.\n */\n\n/**\n * Get the numeric id from an element.\n * This helps match the buttons with the parent list items and sibling inputs.\n *\n * Note: This might not be needed in the end because we may be able to pass character IDs as props.\n *\n * @param  {node} el      Any element (ideally one with an id that contains a decimal).\n * @return {string|false} The numeric part of the id, if one exists.\n */\nexport function getId( el ) {\n\tconst id = el.getAttribute( 'id' );\n\n\tif ( id !== typeof undefined ) {\n\t\treturn id.replace( /[^0-9]+/g, '' );\n\t}\n\n\treturn false;\n}\n\n/**\n * Take an ability score and return the modifier bonus.\n *\n * The ability score must be greater than 1 and up to 30.\n *\n * These scores are taken from the Ability Scores and Modifiers table on page 13 of the D&D 5e Player's Handbook.\n *\n * @param  {int} score An ability score.\n * @return {int}       The modifier for that ability score.\n */\nexport function calculateModifier( score ) {\n\tswitch( score ) {\n\t\tcase 1:\n\t\t\treturn -5;\n\t\tcase 2:\n\t\tcase 3:\n\t\t\treturn -4;\n\t\tcase 4:\n\t\tcase 5:\n\t\t\treturn -3;\n\t\tcase 6:\n\t\tcase 7:\n\t\t\treturn -2;\n\t\tcase 8:\n\t\tcase 9:\n\t\t\treturn -1;\n\t\tcase 10:\n\t\tcase 11:\n\t\t\treturn 0;\n\t\tcase 12:\n\t\tcase 13:\n\t\t\treturn 1;\n\t\tcase 14:\n\t\tcase 15:\n\t\t\treturn 2;\n\t\tcase 16:\n\t\tcase 17:\n\t\t\treturn 3;\n\t\tcase 18:\n\t\tcase 19:\n\t\t\treturn 4;\n\t\tcase 20:\n\t\tcase 21:\n\t\t\treturn 5;\n\t\t// At this point we get into epic levels that are less common.\n\t\tcase 22:\n\t\tcase 23:\n\t\t\treturn 6;\n\t\tcase 24:\n\t\tcase 25:\n\t\t\treturn 7;\n\t\tcase 26:\n\t\tcase 27:\n\t\t\treturn 8;\n\t\tcase 28:\n\t\tcase 29:\n\t\t\treturn 9;\n\t\tcase 30:\n\t\t\treturn 10;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\n/**\n * Get the modifier with a leading + (or - for negative values).\n *\n * @param  {int} dexScore The Dex score.\n * @return {string}       The modifier.\n */\nexport function getModifier( dexScore ) {\n\tconst modValue = calculateModifier( parseInt( dexScore ) );\n\n\tif ( modValue > 0 ) {\n\t\treturn `+${modValue}`;\n\t}\n\n\treturn modValue;\n}\n\n/**\n * Generate a unique GUID.\n *\n * @return {string} A unique GUID in the format: xxxxxxxx-xxxx-xxxx-xxxxxxxxxxxx\n */\nexport function generateGuid() {\n\tlet s4 = () => {\n\t\treturn Math.floor( ( 1 + Math.random() ) * 0x10000 )\n\t\t\t.toString(16)\n\t\t\t.substring(1);\n\t}\n\n\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n","import React from 'react';\nimport { calculateModifier } from '../helpers';\n\nclass AddCharacterForm extends React.Component {\n\tnameRef = React.createRef();\n\tdexRef = React.createRef();\n\thpRef = React.createRef();\n\tinitRef = React.createRef();\n\n\t/**\n\t * Handle creating the character and storing the data in the current state.\n\t *\n\t * @param {event} event\n\t */\n\tcreateCharacter = event => {\n\t\tevent.preventDefault();\n\n\t\tconst modifiedInit = calculateModifier( parseInt( this.dexRef.current.value ) ) + parseInt( this.initRef.current.value );\n\t\tconst character = {\n\t\t\tindex: this.props.characterIndex ?? this.props.npcIndex,\n\t\t\tname: this.nameRef.current.value,\n\t\t\tdex: parseInt( this.dexRef.current.value ),\n\t\t\thp: parseInt( this.hpRef.current.value ),\n\t\t\tinit: modifiedInit,\n\t\t}\n\n\t\t// Check if this is a character. If not it's an NPC.\n\t\tif ( this.props.type === 'character' ) {\n\t\t\t// Pass the character object upstream.\n\t\t\tthis.props.updateCharacters( character.index, character );\n\n\t\t\t// Update the character index.\n\t\t\tthis.props.updateCharacterCount();\n\t\t} else {\n\t\t\tthis.props.updateNPCs( character.index, character );\n\t\t\tthis.props.updateNpcCount();\n\t\t}\n\n\t\t// Reset the form.\n\t\tevent.currentTarget.reset();\n\t}\n\n\t/**\n\t * Render the new character form.\n\t */\n\trender() {\n\t\tconst index = this.props.characterIndex;\n\t\treturn (\n\t\t\t<form className=\"character-edit\" onSubmit={ this.createCharacter }>\n\t\t\t\t<input\n\t\t\t\t\tname=\"character-name\"\n\t\t\t\t\tclassName=\"character-name\"\n\t\t\t\t\tid={`addChar-${index}`}\n\t\t\t\t\tplaceholder=\"Character Name\"\n\t\t\t\t\tref={ this.nameRef }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"dexterity\"\n\t\t\t\t\tclassName=\"character-dex\"\n\t\t\t\t\tid={`charDex-${index}`}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tmax=\"30\"\n\t\t\t\t\tplaceholder=\"Dex\"\n\t\t\t\t\tref={ this.dexRef }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"hp\"\n\t\t\t\t\tclassName=\"hp-input\"\n\t\t\t\t\tid={`hp-${index}`}\n\t\t\t\t\tplaceholder=\"HP\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tref={ this.hpRef }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname=\"initiative\"\n\t\t\t\t\tclassName=\"character-initiative\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tmax=\"20\"\n\t\t\t\t\tplaceholder=\"d20\"\n\t\t\t\t\tid={`charInit-${index}`}\n\t\t\t\t\tref={ this.initRef }\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tid={`add-tmp-char-${index}`}\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tthis.createCharacter;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t>Add</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nexport default AddCharacterForm;","import React from 'react';\nimport CharacterList from './CharacterList';\nimport AddCharacterForm from './AddCharacterForm';\n\nclass Characters extends React.Component {\n\trender() {\n\t\treturn (\n\t\t<div className=\"characters\">\n\t\t\t<h2>Characters</h2>\n\t\t\t<CharacterList\n\t\t\t\ttype=\"character\"\n\t\t\t\tcharacters={ this.props.characters }\n\t\t\t\tbattleStarted={ this.props.battleStarted }\n\t\t\t/>\n\t\t\t<AddCharacterForm\n\t\t\t\ttype=\"character\"\n\t\t\t\tcharacterIndex={ this.props.characterIndex }\n\t\t\t\tupdateCharacterCount={ this.props.updateCharacterCount }\n\t\t\t\tupdateCharacters={ this.props.updateCharacters }\n\t\t\t/>\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Characters;","import React from 'react';\nimport CharacterList from './CharacterList';\nimport AddCharacterForm from './AddCharacterForm';\n\nclass NPCs extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"monsters-npcs\">\n\t\t\t\t<h2>Monsters & NPCs</h2>\n\t\t\t\t<CharacterList\n\t\t\t\t\ttype=\"monster-npc\"\n\t\t\t\t\tcharacters={ this.props.npcs }\n\t\t\t\t\tbattleStarted={ this.props.battleStarted }\n\t\t\t\t/>\n\t\t\t\t<AddCharacterForm\n\t\t\t\t\ttype=\"npc\"\n\t\t\t\t\tnpcIndex={ this.props.npcIndex }\n\t\t\t\t\tupdateNpcCount={ this.props.updateNpcCount }\n\t\t\t\t\tupdateNPCs={ this.props.updateNPCs }\n\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default NPCs;","import React from 'react';\n\nclass SaveButton extends React.Component {\n\n\tgetButtonText = () => {\n\t\tif ( ! this.props.battleStarted ) {\n\t\t\treturn \"Let's go! 💥\";\n\t\t}\n\n\t\treturn \"Save Characters and Reset Battle 💾\"\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button\n\t\t\t\tid=\"save-all-fields\"\n\t\t\t\tdisabled={ ! this.props.battleCanStart }\n\t\t\t\tonClick={ () => {\n\t\t\t\t\tif ( ! this.props.battleStarted ) {\n\t\t\t\t\t\t// If the battle hasn't started yet, this button will handle kicking it off.\n\t\t\t\t\t\treturn this.props.updateBattleStarted()\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise, the button will save the characters but reset the encounter/npcs.\n\t\t\t\t\t\treturn this.props.resetEncounter()\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t>{ this.getButtonText() }</button>\n\t\t)\n\t}\n}\n\nexport default SaveButton;","import React from 'react';\nimport SaveButton from './SaveButton';\n\nclass Save extends React.Component {\n\n\trender() {\n\t\tconst maybeHideButton = this.props.battleStarted ? 'hidden' : '';\n\n\t\treturn (\n\t\t\t<div className=\"start\" id=\"save-fields\">\n\t\t\t\t<button\n\t\t\t\t\tclassName={`load-sample-encounter ${maybeHideButton}`}\n\t\t\t\t\tonClick={ this.props.loadSampleEncounter }\n\t\t\t\t>Load Sample Encounter</button>\n\n\t\t\t\t<SaveButton\n\t\t\t\t\tbattleCanStart={ this.props.battleCanStart }\n\t\t\t\t\tupdateBattleStarted={ this.props.updateBattleStarted }\n\t\t\t\t\tbattleStarted={ this.props.battleStarted }\n\t\t\t\t\tresetEncounter={ this.props.resetEncounter }\n\t\t\t\t/>\n\t\t\t\t<p className=\"description\" id=\"save-all-fields-desc\">Click the \"Let's Go!\" button when all characters have been added to start the battle!</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Save;","const characters = [\n\t{\n\t\tname: \"Frodo\",\n\t\tdex: 15,\n\t\thp: 55,\n\t\tinit: 15\n\t},\n\t{\n\t\tname: \"Samwise\",\n\t\tdex: 10,\n\t\thp: 45,\n\t\tinit: 13\n\t},\n\t{\n\t\tname: \"Merry\",\n\t\tdex: 16,\n\t\thp: 35,\n\t\tinit: 15\n\t},\n\t{\n\t\tname: \"Pippin\",\n\t\tdex: 16,\n\t\thp: 35,\n\t\tinit: 16\n\t}\n];\n\nconst npcs = [\n\t{\n\t\tname: \"Shelob\",\n\t\tdex: 14,\n\t\thp: 85,\n\t\tinit: 15\n\t},\n\t{\n\t\tname: \"Gollum\",\n\t\tdex: 13,\n\t\thp: 35,\n\t\tinit: 14\n\t}\n];\n\nconst sampleState = {\n\tcharacters,\n\tnpcs,\n\tbattleCanStart: true,\n\tbattleStarted: false,\n\tcharacterCount: 4,\n\tnpcCount: 2\n};\n\nexport { characters };\nexport { npcs };\nexport default sampleState;","import React from 'react';\nimport Header from './Header';\nimport Characters from './Characters';\nimport NPCs from './NPCs';\nimport Save from './Save';\nimport sampleState from '../sample-encounter';\n\nclass App extends React.Component {\n\tstate = {\n\t\tcharacterCount: 0, // The total number of characters on the page.\n\t\tnpcCount: 0, // The total number of NPCs on the page.\n\t\tcharacters: [], // A list of all the characters.\n\t\tnpcs: [], // A list of all the NPCs & monsters.\n\t\tbattleStarted: false,\n\t\tbattleCanStart: false,\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { params } = this.props.match,\n\t\t\tlocalStorageRef = localStorage.getItem( params.encounterGuid );\n\n\t\tif ( localStorageRef ) {\n\t\t\tthis.setState( JSON.parse( localStorageRef ) );\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\t// Handle starting the battle.\n\t\tthis.maybeUpdateBattleCanStart();\n\n\t\tlocalStorage.setItem( this.props.match.params.encounterGuid, JSON.stringify( this.state ) );\n\t}\n\n\tupdateCharacters = ( key, updatedCharacter ) => {\n\t\t// Copy the current state.\n\t\tconst characters = this.state.characters;\n\n\t\t// Update the state.\n\t\tcharacters[key] = updatedCharacter;\n\n\t\t// Sort the characters.\n\t\tcharacters.sort(\n\t\t\t// Sort by initiative first.\n\t\t\t( a, b ) => ( a.init < b.init ) ? 1 :\n\t\t\t\t// If initiative is the same, sort by dex.\n\t\t\t\t( a.init === b.init ) ? (\n\t\t\t\t\t( a.dex < b.dex ) ? 1 : -1\n\t\t\t\t) : -1\n\t\t)\n\n\t\t// Set that to state.\n\t\tthis.setState( { characters } );\n\t}\n\n\tupdateNPCs = ( key, updatedNPC ) => {\n\t\t// Copy the current state.\n\t\tconst npcs = this.state.npcs;\n\n\t\t// Update the state.\n\t\tnpcs[key] = updatedNPC;\n\n\t\t// Sort the characters.\n\t\tnpcs.sort(\n\t\t\t// Sort by initiative first.\n\t\t\t( a, b ) => ( a.init < b.init ) ? 1 :\n\t\t\t\t// If initiative is the same, sort by dex.\n\t\t\t\t( a.init === b.init ) ? (\n\t\t\t\t\t( a.dex < b.dex ) ? 1 : -1\n\t\t\t\t) : -1\n\t\t)\n\n\t\t// Set that to state.\n\t\tthis.setState( { npcs } );\n\t}\n\n\tupdateCharacterCount = () => {\n\t\tconst count = this.state.characterCount + 1;\n\t\tthis.setState( { characterCount: count } );\n\t}\n\n\tupdateNpcCount = () => {\n\t\tconst count = this.state.npcCount + 1;\n\t\tthis.setState( { npcCount: count } );\n\t}\n\n\tmaybeUpdateBattleCanStart = () => {\n\t\tconst npcCount = this.state.npcCount;\n\t\tconst characterCount = this.state.characterCount;\n\n\t\t// Bail if the battle has already started.\n\t\tif ( this.state.battleStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Bail if we've already started the fight.\n\t\tif ( this.state.battleCanStart ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( npcCount > 0 && characterCount > 0 ) {\n\t\t\tthis.setState( { battleCanStart: true } );\n\t\t}\n\t}\n\n\tupdateBattleStarted = () => {\n\t\tif ( this.state.battleStarted ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState( { battleStarted: true } );\n\t}\n\n\tresetEncounter = () => {\n\t\tthis.setState( {\n\t\t\tcharacters: this.state.characters,\n\t\t\tcharacterCount: this.state.characterCount,\n\t\t\tnpcs: [],\n\t\t\tnpcCount: 0,\n\t\t\tbattleCanStart: false,\n\t\t\tbattleStarted: false,\n\t\t} );\n\t}\n\n\tloadSampleEncounter = () => {\n\t\tthis.setState( sampleState );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t<Header />\n\t\t\t<div className=\"battle-tracker\">\n\t\t\t\t<Characters\n\t\t\t\t\tcharacterIndex={ this.state.characterCount }\n\t\t\t\t\tupdateCharacterCount={ this.updateCharacterCount }\n\t\t\t\t\tcharacters={ this.state.characters }\n\t\t\t\t\tupdateCharacters={ this.updateCharacters }\n\t\t\t\t\tbattleStarted={ this.state.battleStarted }\n\t\t\t\t/>\n\t\t\t\t<NPCs\n\t\t\t\t\tnpcIndex={ this.state.npcCount }\n\t\t\t\t\tupdateNpcCount={ this.updateNpcCount }\n\t\t\t\t\tnpcs={ this.state.npcs }\n\t\t\t\t\tupdateNPCs={ this.updateNPCs }\n\t\t\t\t\tbattleStarted={ this.state.battleStarted }\n\t\t\t\t/>\n\t\t\t\t<Save\n\t\t\t\t\tbattleCanStart={ this.state.battleCanStart }\n\t\t\t\t\tupdateBattleStarted={ this.updateBattleStarted }\n\t\t\t\t\tloadSampleEncounter={ this.loadSampleEncounter }\n\t\t\t\t\tbattleStarted={ this.state.battleStarted }\n\t\t\t\t\tresetEncounter={ this.resetEncounter }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default App;","import React from 'react';\nimport Header from './Header';\nimport { generateGuid } from '../helpers';\n\nclass Home extends React.Component {\n\tencounterInput = React.createRef();\n\n\tgoToEncounter = event => {\n\t\tevent.preventDefault();\n\n\t\tconst encounterGuid = this.encounterInput.current.value;\n\n\t\tthis.props.history.push( `/${encounterGuid}` );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t<Header />\n\t\t\t<div className=\"battle-tracker-home\">\n\t\t\t\t<form className=\"start-encounter\" onSubmit={ this.goToEncounter }>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\t\tref={ this.encounterInput }\n\t\t\t\t\t\tdefaultValue={ generateGuid() }\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Build your encounter ⚔️</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</>\n\t\t)\n\t}\n}\n\nexport default Home;","import React from 'react';\n\nconst NotFound = () => (\n\t<div>\n\t\t<h2>Critical Fail!</h2>\n\t\t<p>The page you were looking for was not found. Roll again, maybe?</p>\n\t</div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Home from './Home';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route path=\"/:encounterGuid\" component={App} />\n\t\t\t<Route component={NotFound} />\n\t\t</Switch>\n\t</BrowserRouter>\n)\n\nexport default Router;","// ⚔️\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './assets/style.css';\n\nrender(\n\t<Router />,\n\tdocument.querySelector('#main')\n);\n"],"sourceRoot":""}